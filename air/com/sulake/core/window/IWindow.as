//com.sulake.core.window.IWindow

package com.sulake.core.window{
    import com.sulake.core.runtime.IDisposable;
    import flash.geom.Point;
    import flash.geom.Rectangle;
    import com.sulake.core.window.utils.IRectLimiter;
    import com.sulake.core.window.components.IDesktopWindow;
    import flash.geom.ColorTransform;
    import com.sulake.core.utils.Map;
    import flash.display.IBitmapDrawable;
    import com.sulake.core.window.utils.PropertyStruct;

    public /*dynamic*/ interface IWindow extends IDisposable {

        function get x():int;
        function get y():int;
        function get id():uint;
        function get name():String;
        function get width():int;
        function get height():int;
        function get position():Point;
        function get rectangle():Rectangle;
        function get renderingRectangle():Rectangle;
        function get properties():Array;
        function get procedure():Function;
        function get background():Boolean;
        function get alpha():uint;
        function get color():uint;
        function get blend():Number;
        function get style():uint;
        function get visible():Boolean;
        function get clipping():Boolean;
        function get caption():String;
        function get parent():IWindow;
        function get debug():Boolean;
        function get filters():Array;
        function get mouseThreshold():uint;
        function get immediateClickMode():Boolean;
        function get type():uint;
        function get state():uint;
        function get param():uint;
        function get limits():IRectLimiter;
        function get context():IWindowContext;
        function get desktop():IDesktopWindow;
        function get host():IWindow;
        function get tags():Array;
        function get left():int;
        function get top():int;
        function get right():int;
        function get bottom():int;
        function get dynamicStyle():String;
        function get renderingX():int;
        function get renderingY():int;
        function get renderingWidth():int;
        function get renderingHeight():int;
        function get etchingPoint():Point;
        function get dynamicStyleColor():ColorTransform;
        function set dynamicStyleColor(k:ColorTransform):void;
        function set x(k:int):void;
        function set y(k:int):void;
        function set id(k:uint):void;
        function set name(k:String):void;
        function set width(k:int):void;
        function set height(k:int):void;
        function set position(k:Point):void;
        function set rectangle(k:Rectangle):void;
        function set properties(k:Array):void;
        function set procedure(k:Function):void;
        function set background(k:Boolean):void;
        function set alpha(k:uint):void;
        function set color(k:uint):void;
        function set blend(k:Number):void;
        function set style(k:uint):void;
        function set visible(k:Boolean):void;
        function set clipping(k:Boolean):void;
        function set caption(k:String):void;
        function set parent(k:IWindow):void;
        function set debug(k:Boolean):void;
        function set filters(k:Array):void;
        function set mouseThreshold(k:uint):void;
        function set immediateClickMode(k:Boolean):void;
        function set dynamicStyle(k:String):void;
        function set etching(k:Array):void;
        function toString():String;
        function clone():IWindow;
        function invalidate(k:Rectangle=null):void;
        function resolve():uint;
        function buildFromXML(k:XML, _arg_2:Map=null):Boolean;
        function center():void;
        function offset(k:Number, _arg_2:Number):void;
        function scale(k:Number, _arg_2:Number):void;
        function fetchDrawBuffer():IBitmapDrawable;
        function getRelativeMousePosition(k:Point):void;
        function getAbsoluteMousePosition(k:Point):void;
        function getDrawRegion(k:Rectangle):void;
        function getMouseRegion(k:Rectangle):void;
        function getLocalPosition(k:Point):void;
        function getLocalRectangle(k:Rectangle):void;
        function hitTestLocalPoint(k:Point):Boolean;
        function hitTestLocalRectangle(k:Rectangle):Boolean;
        function getGlobalPosition(k:Point):void;
        function setGlobalPosition(k:Point):void;
        function getGlobalRectangle(k:Rectangle):void;
        function setGlobalRectangle(k:Rectangle):void;
        function hitTestGlobalPoint(k:Point):Boolean;
        function hitTestGlobalRectangle(k:Rectangle):Boolean;
        function resolveVerticalScale():Number;
        function resolveHorizontalScale():Number;
        function convertPointFromLocalToGlobalSpace(k:Point):void;
        function convertPointFromGlobalToLocalSpace(k:Point):void;
        function findParentByName(k:String):IWindow;
        function setStateFlag(k:uint, _arg_2:Boolean=true):void;
        function getStateFlag(k:uint):Boolean;
        function testStateFlag(k:uint, _arg_2:uint=0):Boolean;
        function setStyleFlag(k:uint, _arg_2:Boolean=true):void;
        function getStyleFlag(k:uint):Boolean;
        function testStyleFlag(k:uint, _arg_2:uint=0):Boolean;
        function setParamFlag(k:uint, _arg_2:Boolean=true):void;
        function getParamFlag(k:uint):Boolean;
        function testParamFlag(k:uint, _arg_2:uint=0):Boolean;
        function destroy():Boolean;
        function minimize():Boolean;
        function maximize():Boolean;
        function restore():Boolean;
        function activate():Boolean;
        function deactivate():Boolean;
        function lock():Boolean;
        function unlock():Boolean;
        function enable():Boolean;
        function disable():Boolean;
        function addEventListener(k:String, _arg_2:Function, _arg_3:int=0):void;
        function removeEventListener(k:String, _arg_2:Function):void;
        function hasEventListener(k:String):Boolean;
        function createProperty(k:String, _arg_2:Object):PropertyStruct;
        function getDefaultProperty(k:String):PropertyStruct;
        function enableChildren(k:Boolean, _arg_2:Array):void;
        function activateChildren(k:Boolean, _arg_2:Array):void;
        function setVisibleChildren(k:Boolean, _arg_2:Array):void;

    }
}//package com.sulake.core.window

