//com.sulake.habbo.room.IRoomEngine

package com.sulake.habbo.room{
    import com.sulake.core.runtime.IUnknown;
    import flash.events.IEventDispatcher;
    import flash.display.DisplayObject;
    import com.sulake.room.renderer.IRoomRenderingCanvas;
    import com.sulake.room.utils.IRoomGeometry;
    import flash.geom.Point;
    import com.sulake.room.utils.IVector3d;
    import flash.geom.Rectangle;
    import com.sulake.room.object.IRoomObject;
    import com.sulake.core.utils.Map;
    import com.sulake.habbo.session.ISessionDataManager;
    import flash.display.BitmapData;

    public /*dynamic*/ interface IRoomEngine extends IUnknown {

        function get events():IEventDispatcher;
        function get isInitialized():Boolean;
        function get activeRoomId():int;
        function createRoomCanvas(k:int, _arg_2:int, _arg_3:int, _arg_4:int, _arg_5:int):DisplayObject;
        function createRoomCanvas3d(k:int, _arg_2:int, _arg_3:int, _arg_4:int, _arg_5:int):IRoomRenderingCanvas;
        function modifyRoomCanvas(k:int, _arg_2:int, _arg_3:int, _arg_4:int):Boolean;
        function setRoomCanvasMask(k:int, _arg_2:int, _arg_3:Boolean):void;
        function getRoomCanvasGeometry(k:int, _arg_2:int=-1):IRoomGeometry;
        function getRoomCanvasScreenOffset(k:int, _arg_2:int=-1):Point;
        function setRoomCanvasScreenOffset(k:int, _arg_2:int, _arg_3:Point):Boolean;
        function getRoomCanvasScale(k:int, _arg_2:int=-1):Number;
        function get objectMouseClickHandler():IRoomObjectMouseClickHandler;
        function handleRoomCanvasMouseEvent(k:int, _arg_2:int, _arg_3:int, _arg_4:String, _arg_5:Boolean, _arg_6:Boolean, _arg_7:Boolean, _arg_8:Boolean):void;
        function setActiveRoom(k:int):void;
        function getRoomNumberValue(k:int, _arg_2:String):Number;
        function getRoomStringValue(k:int, _arg_2:String):String;
        function getFurnitureIconUrl(k:int):IRoomContentLoaderUrl;
        function getFurnitureIcon(k:int, _arg_2:IGetImageListener, _arg_3:String=null, _arg_4:IStuffData=null):ImageResult;
        function getWallItemIconUrl(k:int, _arg_2:String=null):IRoomContentLoaderUrl;
        function getWallItemIcon(k:int, _arg_2:IGetImageListener, _arg_3:String=null):ImageResult;
        function getFurnitureImage(k:int, _arg_2:IVector3d, _arg_3:int, _arg_4:IGetImageListener, _arg_5:uint=0, _arg_6:String=null, _arg_7:int=-1, _arg_8:int=-1, _arg_9:IStuffData=null):ImageResult;
        function getGenericRoomObjectImage(k:String, _arg_2:String, _arg_3:IVector3d, _arg_4:int, _arg_5:IGetImageListener, _arg_6:uint=0, _arg_7:String=null, _arg_8:IStuffData=null, _arg_9:int=-1, k0:int=-1, k1:String=null, k2:int=-1):ImageResult;
        function getWallItemImage(k:int, _arg_2:IVector3d, _arg_3:int, _arg_4:IGetImageListener, _arg_5:uint=0, _arg_6:String=null, _arg_7:int=-1, _arg_8:int=-1):ImageResult;
        function getPetImage(k:int, _arg_2:int, _arg_3:int, _arg_4:IVector3d, _arg_5:int, _arg_6:IGetImageListener, _arg_7:Boolean=true, _arg_8:uint=0, _arg_9:Array=null, k0:String=null):ImageResult;
        function getRoomImage(k:String, _arg_2:String, _arg_3:String, _arg_4:int, _arg_5:IGetImageListener, _arg_6:String=null):ImageResult;
        function getRoomObjectImage(k:int, _arg_2:int, _arg_3:int, _arg_4:IVector3d, _arg_5:int, _arg_6:IGetImageListener, _arg_7:uint=0):ImageResult;
        function getRoomObjectBoundingRectangle(k:int, _arg_2:int, _arg_3:int, _arg_4:int):Rectangle;
        function getRoomObjectScreenLocation(k:int, _arg_2:int, _arg_3:int, _arg_4:int=-1):Point;
        function getActiveRoomBoundingRectangle(k:int):Rectangle;
        function getRoomObjectCount(k:int, _arg_2:int):int;
        function getRoomObject(k:int, _arg_2:int, _arg_3:int):IRoomObject;
        function getRoomObjectWithIndex(k:int, _arg_2:int, _arg_3:int):IRoomObject;
        function modifyRoomObject(k:int, _arg_2:int, _arg_3:int, _arg_4:String):Boolean;
        function placeSelectedObject(k:int):void;
        function modifyRoomObjectDataWithMap(k:int, _arg_2:int, _arg_3:String, _arg_4:Map):Boolean;
        function modifyRoomObjectData(k:int, _arg_2:int, _arg_3:String, _arg_4:String):Boolean;
        function deleteRoomObject(k:int, _arg_2:int):Boolean;
        function initializeRoomObjectInsert(k:String, _arg_2:int, _arg_3:int, _arg_4:int, _arg_5:String=null, _arg_6:IStuffData=null, _arg_7:int=-1, _arg_8:int=-1, _arg_9:String=null):Boolean;
        function getIsSelectedObjectInValidPosition():Boolean;
        function cancelRoomObjectInsert():void;
        function isInsertingObject():Boolean;
        function selectAvatar(k:int, _arg_2:int):void;
        function selectRoomObject(k:int, _arg_2:int, _arg_3:int):void;
        function getWorldType(k:int):String;
        function getSelectedObjectData(k:int):ISelectedRoomObjectData;
        function getSelectedAvatarId():int;
        function updateObjectRoomColor(k:int, _arg_2:uint, _arg_3:int, _arg_4:Boolean):Boolean;
        function updateObjectRoomBackgroundColor(k:int, _arg_2:Boolean, _arg_3:int, _arg_4:int, _arg_5:int):Boolean;
        function getPetColor(k:int, _arg_2:int):PetColorResult;
        function getPetColorsByTag(k:int, _arg_2:String):Array;
        function getPetLayerIdForTag(k:int, _arg_2:String):int;
        function getPetDefaultPalette(k:int, _arg_2:String):PetColorResult;
        function addObjectFurniture(k:int, _arg_2:int, _arg_3:int, _arg_4:IVector3d, _arg_5:IVector3d, _arg_6:int, _arg_7:IStuffData, _arg_8:Number=NaN, _arg_9:int=-1, k0:int=0, k1:int=0, k2:String="", k3:Boolean=true, k4:Boolean=true, k5:Number=-1):Boolean;
        function changeObjectState(k:int, _arg_2:int, _arg_3:int):void;
        function changeObjectModelData(k:int, _arg_2:int, _arg_3:int, _arg_4:String, _arg_5:int):Boolean;
        function disposeObjectFurniture(k:int, _arg_2:int, _arg_3:int=-1, _arg_4:Boolean=false):void;
        function addObjectWallItem(k:int, _arg_2:int, _arg_3:int, _arg_4:IVector3d, _arg_5:IVector3d, _arg_6:int, _arg_7:String, _arg_8:int=0, _arg_9:int=0, k0:String="", k1:int=-1, k2:Boolean=true):Boolean;
        function updateObjectWallItemLocation(k:int, _arg_2:int, _arg_3:IVector3d):Boolean;
        function disposeObjectWallItem(k:int, _arg_2:int, _arg_3:int=-1):void;
        function addObjectUser(k:int, _arg_2:int, _arg_3:IVector3d, _arg_4:IVector3d, _arg_5:Number, _arg_6:int, _arg_7:String=null):Boolean;
        function addObjectSnowWar(k:int, _arg_2:int, _arg_3:IVector3d, _arg_4:int):Boolean;
        function updateObjectUser(k:int, _arg_2:int, _arg_3:IVector3d, _arg_4:IVector3d, _arg_5:Boolean=false, _arg_6:Number=0, _arg_7:IVector3d=null, _arg_8:Number=NaN):Boolean;
        function updateObjectUserFigure(k:int, _arg_2:int, _arg_3:String, _arg_4:String=null, _arg_5:String=null, _arg_6:Boolean=false):Boolean;
        function updateObjectUserPosture(k:int, _arg_2:int, _arg_3:String, _arg_4:String=""):Boolean;
        function updateObjectUserGesture(k:int, _arg_2:int, _arg_3:int):Boolean;
        function updateObjectUserEffect(k:int, _arg_2:int, _arg_3:int, _arg_4:int=0):Boolean;
        function updateObjectSnowWar(k:int, _arg_2:int, _arg_3:IVector3d, _arg_4:int):Boolean;
        function disposeObjectSnowWar(k:int, _arg_2:int, _arg_3:int):void;
        function updateObjectUserAction(k:int, _arg_2:int, _arg_3:String, _arg_4:int, _arg_5:String=null):Boolean;
        function disposeObjectUser(k:int, _arg_2:int):void;
        function getUsersCarryingObjectId(k:int, _arg_2:int):int;
        function updateObjectRoom(k:int, _arg_2:String=null, _arg_3:String=null, _arg_4:String=null, _arg_5:Boolean=false):Boolean;
        function getFurnitureType(k:int):String;
        function getFurnitureTypeId(k:String):int;
        function getWallItemType(k:int, _arg_2:String=null):String;
        function useRoomObjectInActiveRoom(k:int, _arg_2:int):Boolean;
        function initializeRoom(k:int, _arg_2:XML):void;
        function disposeRoom(k:int):void;
        function get isDecorateMode():Boolean;
        function set isGameMode(k:Boolean):void;
        function get isGameMode():Boolean;
        function showUseProductSelection(k:int, _arg_2:int, _arg_3:int=-1):void;
        function setAvatarEffect(k:int):void;
        function getFurniStackingHeightMap(k:int):IFurniStackingHeightMap;
        function getTileObjectMap(k:int):ITileObjectMap;
        function get sessionDataManager():ISessionDataManager;
        function setTileCursorState(k:int, _arg_2:int):void;
        function addObjectUpdateCategory(k:int):void;
        function removeObjectUpdateCategory(k:int):void;
        function getRoomSnapshot(k:int, _arg_2:int):BitmapData;
        function set disableUpdate(k:Boolean):void;
        function runUpdate():void;
        function updateObjectRoomVisibilities(k:int, _arg_2:Boolean, _arg_3:Boolean=true):Boolean;
        function get mouseEventsDisabledAboveY():int;
        function set mouseEventsDisabledAboveY(k:int):void;
        function get mouseEventsDisabledLeftToX():int;
        function set mouseEventsDisabledLeftToX(k:int):void;
        function purgeRoomContent():void;

    }
}//package com.sulake.habbo.room

